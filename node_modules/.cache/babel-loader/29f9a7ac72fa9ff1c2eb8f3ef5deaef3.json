{"ast":null,"code":"import _objectSpread from \"/home/praveen-pc/tf/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/praveen-pc/tf/src/components/contact/Form.js\";\nimport React, { Component } from 'react';\nimport { ReCaptcha } from 'react-recaptcha-google';\nimport './Contact.css';\nimport axios from 'axios';\n\nclass Form extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = e => {\n      // console.log('handle change called');\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.validateEmail = email => {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        number: this.state.number,\n        message: this.state.message\n      };\n      axios.post('http://localhost:5000/api/form', newUser).then(res => console.log(res)).catch(err => console.log(err)); // this.props.registerUser(newUser,this.props.history);\n    };\n\n    this.onLoadRecaptcha = this.onLoadRecaptcha.bind(this);\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      name: '',\n      email: '',\n      number: 0,\n      message: '',\n      disabled: true,\n      ctoken: '',\n      info: {\n        type: '',\n        message: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.captchaDemo) {\n      console.log(\"started, just a second...\");\n      this.captchaDemo.reset();\n    }\n  }\n\n  verifyCallback(recaptchaToken) {\n    // Here you will get the final recaptchaToken!!! \n    console.log(recaptchaToken);\n    this.setState(_objectSpread({}, this.state, {\n      ctoken: recaptchaToken,\n      disabled: false\n    }));\n  }\n\n  onLoadRecaptcha() {\n    if (this.captchaDemo) {\n      this.captchaDemo.reset();\n    }\n  }\n\n  // handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   this.setState({\n  //     ...this.state,\n  //     disabled: true\n  //   })\n  //   if (this.validateEmail(this.state.email)) {\n  //     if (this.state.number.toString().length == 10) {\n  //       if (this.state.ctoken) {\n  //         const body = {\n  //           name: this.state.name,\n  //           email: this.state.email,\n  //           number: this.state.number,\n  //           message: this.state.message,\n  //           ctoken: this.state.ctoken\n  //         }\n  //         fetch('http://localhost:5000/form', {\n  //           method: 'POST',\n  //           headers: { 'Content-Type': 'application/json' },\n  //           body: JSON.stringify(body)\n  //         }).then(res => res.json()).then(result => {\n  //           console.log(result)\n  //           if (result.message) {\n  //             this.setState({\n  //               ...this.state,\n  //               info: {\n  //                 type: 'err',\n  //                 message: result.message\n  //               },\n  //               disabled: false\n  //             })\n  //           } else {\n  //             this.setState({\n  //               ...this.state,\n  //               info: {\n  //                 type: 'info',\n  //                 message: 'message sent'\n  //               },\n  //               disabled: false\n  //             })\n  //           }\n  //         });\n  //       } else {\n  //         this.setState({\n  //           ...this.state,\n  //           info: {\n  //             type: 'err',\n  //             message: 'check Captcha!'\n  //           },\n  //           disabled: false\n  //         })\n  //       }\n  //     } else {\n  //       this.setState({\n  //         ...this.state,\n  //         info: {\n  //           type: 'err',\n  //           message: 'invalid phone number'\n  //         },\n  //         disabled: false\n  //       })\n  //     }\n  //   } else {\n  //     this.setState({\n  //       ...this.state,\n  //       info: {\n  //         type: 'err',\n  //         message: 'invalid email'\n  //       },\n  //       disabled: false\n  //     })\n  //   }\n  // }\n  render() {\n    const btn = this.state.disabled ? 'btn-disabled' : 'button';\n    const infoClass = this.state.info.type === 'err' ? 'in errMessage' : 'in infoMessage';\n    return React.createElement(\"form\", {\n      className: \"inner-section\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"name\",\n      name: \"name\",\n      onChange: this.handleChange,\n      type: \"text\",\n      className: \"in name1\",\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      onChange: this.handleChange,\n      type: \"text\",\n      className: \"in email\",\n      placeholder: \"Your Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"number\",\n      name: \"number\",\n      onChange: this.handleChange,\n      type: \"number\",\n      className: \"in number\",\n      placeholder: \"Mobile Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      id: \"message\",\n      name: \"message\",\n      onChange: this.handleChange,\n      placeholder: \"Message\",\n      className: \"in message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(ReCaptcha, {\n      ref: el => {\n        this.captchaDemo = el;\n      },\n      size: \"large\",\n      render: \"explicit\",\n      sitekey: \"6Lc8o8YUAAAAAE9zrULOckZuRwcjkUKygGcWEfL5\",\n      onloadCallback: this.onLoadRecaptcha,\n      verifyCallback: this.verifyCallback,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    })), this.state.info.message ? React.createElement(\"div\", {\n      className: infoClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, this.state.info.message)) : null, React.createElement(\"button\", {\n      disabled: this.state.disabled,\n      className: btn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Send Message\"));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/praveen-pc/tf/src/components/contact/Form.js"],"names":["React","Component","ReCaptcha","axios","Form","constructor","props","context","handleChange","e","setState","target","name","value","validateEmail","email","re","test","handleSubmit","preventDefault","newUser","state","number","message","post","then","res","console","log","catch","err","onLoadRecaptcha","bind","verifyCallback","disabled","ctoken","info","type","componentDidMount","captchaDemo","reset","recaptchaToken","render","btn","infoClass","display","justifyContent","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { ReCaptcha } from 'react-recaptcha-google'\nimport './Contact.css'\nimport axios from 'axios';\n\n\n\nclass Form extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.onLoadRecaptcha = this.onLoadRecaptcha.bind(this);\n    this.verifyCallback = this.verifyCallback.bind(this);\n\n    this.state = {\n      name: '',\n      email: '',\n      number: 0,\n      message: '',\n      disabled: true,\n      ctoken: '',\n      info: {\n        type: '',\n        message: ''\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.captchaDemo) {\n      console.log(\"started, just a second...\")\n      this.captchaDemo.reset();\n    }\n  }\n\n  verifyCallback(recaptchaToken) {\n    // Here you will get the final recaptchaToken!!! \n    console.log(recaptchaToken)\n    this.setState({\n      ...this.state,\n      ctoken: recaptchaToken,\n      disabled: false\n    })\n  }\n  onLoadRecaptcha() {\n    if (this.captchaDemo) {\n      this.captchaDemo.reset();\n    }\n  }\n\n  handleChange=(e)=>{\n    // console.log('handle change called');\n    this.setState({[e.target.name]:e.target.value});\n}\n\n  // handleChange = (e) => {\n  //   switch (e.target.id) {\n  //     case 'name':\n  //       this.setState({ ...this.state, name: e.target.value })\n  //       break;\n  //     case 'email':\n  //       this.setState({ ...this.state, email: e.target.value })\n  //       break;\n  //     case 'number':\n  //       this.setState({ ...this.state, number: e.target.value })\n  //       break;\n  //     case 'message':\n  //       this.setState({ ...this.state, message: e.target.value })\n  //       break;\n      \n  //     default:\n          \n\n  //   }\n  // }\n\n  validateEmail = (email) => {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  handleSubmit=(e)=>{\n    e.preventDefault();\n\n    const newUser={\n        name:this.state.name,\n        email:this.state.email,\n        number:this.state.number,\n        message:this.state.message\n    }\n\n    \n    \n    axios.post('http://localhost:5000/api/form',newUser)\n    .then(res=>console.log(res))\n    .catch(err=>console.log(err));\n\n\n    // this.props.registerUser(newUser,this.props.history);\n}\n\n  // handleSubmit = (e) => {\n  //   e.preventDefault();\n\n  //   this.setState({\n  //     ...this.state,\n  //     disabled: true\n  //   })\n\n  //   if (this.validateEmail(this.state.email)) {\n  //     if (this.state.number.toString().length == 10) {\n  //       if (this.state.ctoken) {\n  //         const body = {\n  //           name: this.state.name,\n  //           email: this.state.email,\n  //           number: this.state.number,\n  //           message: this.state.message,\n  //           ctoken: this.state.ctoken\n  //         }\n\n  //         fetch('http://localhost:5000/form', {\n  //           method: 'POST',\n  //           headers: { 'Content-Type': 'application/json' },\n  //           body: JSON.stringify(body)\n  //         }).then(res => res.json()).then(result => {\n  //           console.log(result)\n  //           if (result.message) {\n  //             this.setState({\n  //               ...this.state,\n  //               info: {\n  //                 type: 'err',\n  //                 message: result.message\n  //               },\n  //               disabled: false\n  //             })\n  //           } else {\n  //             this.setState({\n  //               ...this.state,\n  //               info: {\n  //                 type: 'info',\n  //                 message: 'message sent'\n  //               },\n  //               disabled: false\n  //             })\n  //           }\n  //         });\n\n  //       } else {\n  //         this.setState({\n  //           ...this.state,\n  //           info: {\n  //             type: 'err',\n  //             message: 'check Captcha!'\n  //           },\n  //           disabled: false\n  //         })\n  //       }\n  //     } else {\n  //       this.setState({\n  //         ...this.state,\n  //         info: {\n  //           type: 'err',\n  //           message: 'invalid phone number'\n  //         },\n  //         disabled: false\n  //       })\n  //     }\n  //   } else {\n  //     this.setState({\n  //       ...this.state,\n  //       info: {\n  //         type: 'err',\n  //         message: 'invalid email'\n  //       },\n  //       disabled: false\n  //     })\n  //   }\n\n\n  // }\n\n\n  render() {\n\n    const btn = this.state.disabled ? 'btn-disabled' : 'button';\n    const infoClass = this.state.info.type === 'err' ? 'in errMessage' : 'in infoMessage'\n\n\n    return (\n      <form className=\"inner-section\" onSubmit={this.handleSubmit}>\n        <input id='name' name='name'  onChange={this.handleChange} type=\"text\" className=\"in name1\" placeholder='Name' />\n        <input id='email' name='email' onChange={this.handleChange} type=\"text\" className=\"in email\" placeholder='Your Email' />\n        <input id='number' name='number' onChange={this.handleChange} type=\"number\" className=\"in number\" placeholder='Mobile Number' />\n        <textarea id='message'  name='message' onChange={this.handleChange} placeholder='Message' className=\"in message\"></textarea>\n        <div style={{display:'flex',justifyContent:'center',}}>\n          <ReCaptcha\n            ref={(el) => { this.captchaDemo = el; }}\n            size=\"large\"\n            render=\"explicit\"\n            sitekey=\"6Lc8o8YUAAAAAE9zrULOckZuRwcjkUKygGcWEfL5\"\n            onloadCallback={this.onLoadRecaptcha}\n            verifyCallback={this.verifyCallback}\n          />\n        </div>\n        {this.state.info.message ? <div className={infoClass}>\n          <p>{this.state.info.message}</p>\n        </div> : null}\n\n        <button disabled={this.state.disabled} className={btn}>Send Message</button>\n      </form>\n    )\n  }\n}\n\n\n\nexport default Form"]},"metadata":{},"sourceType":"module"}