{"ast":null,"code":"var _jsxFileName = \"/home/praveen-pc/tf/src/components/SliderComponent/Slider.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport './Slider.scss';\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.IMAGE_PARTS = 4;\n    this.changeTO = null;\n    this.AUTOCHANGE_TIME = 3000;\n    this.state = {\n      activeSlide: -1,\n      prevSlide: -1,\n      sliderReady: false\n    };\n  }\n\n  componentWillUnmount() {\n    window.clearTimeout(this.changeTO);\n  }\n\n  componentDidMount() {\n    this.runAutochangeTO();\n    setTimeout(() => {\n      this.setState({\n        activeSlide: 0,\n        sliderReady: true\n      });\n    }, 0);\n  }\n\n  runAutochangeTO() {\n    this.changeTO = setTimeout(() => {\n      this.changeSlides(1);\n      this.runAutochangeTO();\n    }, this.AUTOCHANGE_TIME);\n  }\n\n  changeSlides(change) {\n    window.clearTimeout(this.changeTO);\n    const length = this.props.slides.length;\n    const prevSlide = this.state.activeSlide;\n    let activeSlide = prevSlide + change;\n    if (activeSlide < 0) activeSlide = length - 1;\n    if (activeSlide >= length) activeSlide = 0;\n    this.setState({\n      activeSlide,\n      prevSlide\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          activeSlide = _this$state.activeSlide,\n          prevSlide = _this$state.prevSlide,\n          sliderReady = _this$state.sliderReady;\n    return React.createElement(\"div\", {\n      className: classNames('slider', {\n        's--ready': sliderReady\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slider__slides\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.props.slides.map((slide, index) => React.createElement(\"div\", {\n      className: classNames('slider__slide', {\n        's--active': activeSlide === index,\n        's--prev': prevSlide === index\n      }),\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slider__slide-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"slider__slide-subheading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: slide.link || \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, slide.head))), React.createElement(\"div\", {\n      className: \"slider__slide-parts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, [...Array(this.IMAGE_PARTS).fill()].map((x, i) => React.createElement(\"div\", {\n      className: \"slider__slide-part\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slider__slide-part-inner\",\n      style: {\n        backgroundImage: `url(${slide.img})`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      className: \"slider__control\",\n      onClick: () => this.changeSlides(-1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"slider__control slider__control--right\",\n      onClick: () => this.changeSlides(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Slider;","map":{"version":3,"sources":["/home/praveen-pc/tf/src/components/SliderComponent/Slider.js"],"names":["React","classNames","Slider","Component","constructor","props","IMAGE_PARTS","changeTO","AUTOCHANGE_TIME","state","activeSlide","prevSlide","sliderReady","componentWillUnmount","window","clearTimeout","componentDidMount","runAutochangeTO","setTimeout","setState","changeSlides","change","length","slides","render","map","slide","index","link","head","Array","fill","x","i","backgroundImage","img"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classNames from 'classnames'\n\nimport './Slider.scss'\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.IMAGE_PARTS = 4;\n\n    this.changeTO = null;\n    this.AUTOCHANGE_TIME = 3000;\n\n    this.state = { activeSlide: -1, prevSlide: -1, sliderReady: false };\n  }\n\n  componentWillUnmount() {\n    window.clearTimeout(this.changeTO);\n  }\n\n  componentDidMount() {\n    this.runAutochangeTO();\n    setTimeout(() => {\n      this.setState({ activeSlide: 0, sliderReady: true });\n    }, 0);\n  }\n\n  runAutochangeTO() {\n    this.changeTO = setTimeout(() => {\n      this.changeSlides(1);\n      this.runAutochangeTO();\n    }, this.AUTOCHANGE_TIME);\n  }\n\n  changeSlides(change) {\n    window.clearTimeout(this.changeTO);\n    const { length } = this.props.slides;\n    const prevSlide = this.state.activeSlide;\n    let activeSlide = prevSlide + change;\n    if (activeSlide < 0) activeSlide = length - 1;\n    if (activeSlide >= length) activeSlide = 0;\n    this.setState({ activeSlide, prevSlide });\n  }\n\n  render() {\n\n\n\n    const { activeSlide, prevSlide, sliderReady } = this.state;\n    return (\n      <div className={classNames('slider', { 's--ready': sliderReady })}>\n        {/* <p className=\"slider__top-heading\">...</p> */}\n        <div className=\"slider__slides\">\n          {this.props.slides.map((slide, index) => (\n            <div\n              className={classNames('slider__slide', { 's--active': activeSlide === index, 's--prev': prevSlide === index })}\n              key={index}\n            >\n              <div className=\"slider__slide-content\">\n                <h3 className=\"slider__slide-subheading\"><a href={slide.link || \"\"}>{slide.head}</a></h3>\n                {/* <h2 className=\"slider__slide-heading\">\n                \n                </h2> */}\n                {/* <p className=\"slider__slide-readmore\">...</p> */}\n              </div>\n              <div className=\"slider__slide-parts\">\n                {[...Array(this.IMAGE_PARTS).fill()].map((x, i) => (\n                  <div className=\"slider__slide-part\" key={i}>\n                    <div className=\"slider__slide-part-inner\" style={{ backgroundImage: `url(${slide.img})` }} />\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"slider__control\" onClick={() => this.changeSlides(-1)} />\n        <div className=\"slider__control slider__control--right\" onClick={() => this.changeSlides(1)} />\n      </div>\n    );\n  }\n}\n\n\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}